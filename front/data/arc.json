[
    {
        "type": "directory",
        "name": "Arquitectura",
        "full_path": "Arquitectura",
        "children": [
            {
                "type": "file",
                "name": "ALU",
                "full_path": "Arquitectura.ALU",
                "imports": [
                    "ext.numpy",
                    "ext.pandas",
                    "ext.matplotlib",
                    "ext.seaborn",
                    "int.Operations.Sum",
                    "int.Operations.Subtract",
                    "int.Operations.Multiply",
                    "int.Operations.Divide",
                    "int.Operations.Power",
                    "int.Operations.IntDivide"
                ],
                "explanation": "The ALU class represents an Arithmetic Logic Unit. It performs various arithmetic operations such as addition, subtraction, multiplication, division, exponentiation, and integer division. The class depends on external libraries numpy, pandas, matplotlib, and seaborn for data manipulation and visualization. It also depends on internal modules Sum, Subtract, Multiply, Divide, Power, and IntDivide for performing the respective operations."
            },
            {
                "type": "file",
                "name": "Calculator",
                "full_path": "Arquitectura.Calculator",
                "imports": [
                    "int.ALU.py"
                ],
                "explanation": "The code imports the ALU class from the internal library 'ALU'. The Calculator class has a menu method that alternates between processing an operator and an operand using the ALU. The main method initializes a Calculator object and calls the menu method."
            },
            {
                "type": "directory",
                "name": "Operations",
                "children": [
                    {
                        "type": "file",
                        "name": "Divide",
                        "full_path": "Arquitectura.Operations.Divide",
                        "imports": [
                            "int.Operations.Operation"
                        ],
                        "explanation": "The file contains a class called Divide that inherits from the Operation class. It has an __init__ method to initialize the operands and a calculate method to perform division. If the second operand is 0, it raises a ValueError. The code depends on the internal library 'int.Operations.Operation'."
                    },
                    {
                        "type": "file",
                        "name": "IntDivide",
                        "full_path": "Arquitectura.Operations.IntDivide",
                        "imports": [
                            "int.Operations.Operation"
                        ],
                        "explanation": "The file contains a class called IntDivide that inherits from the Operation class. It has an __init__ method to initialize the operands and a calculate method to perform integer division. If the second operand is 0, it raises a ValueError. The code depends on the internal library 'int.Operations.Operation'."
                    },
                    {
                        "type": "file",
                        "name": "Multiply",
                        "full_path": "Arquitectura.Operations.Multiply",
                        "imports": [
                            "int.Operations.Operation"
                        ],
                        "explanation": "This file contains a class called Multiply that inherits from the Operation class. It has an __init__ method that takes two float parameters and a calculate method that returns the product of the two numbers."
                    },
                    {
                        "type": "file",
                        "name": "Operation",
                        "full_path": "Arquitectura.Operations.Operation",
                        "imports": [
                            "int.abc",
                            "ext.library.sublibrary"
                        ],
                        "explanation": "The file contains a class named Operation that is an abstract base class (ABC). It has two attributes, 'a' and 'b', and an abstract method called 'calculate'. The code imports the ABC module from the abc library, which is an internal dependency."
                    },
                    {
                        "type": "file",
                        "name": "Power",
                        "full_path": "Arquitectura.Operations.Power",
                        "imports": [
                            "int.Operation",
                            "int.Power"
                        ],
                        "explanation": "This file contains a class called Power that inherits from the Operation class. It has an __init__ method that takes two float parameters and a calculate method that returns the result of raising the first parameter to the power of the second parameter."
                    },
                    {
                        "type": "file",
                        "name": "Subtract",
                        "full_path": "Arquitectura.Operations.Subtract",
                        "imports": [
                            "int.Operations.Operation"
                        ],
                        "explanation": "The Subtract class is a subclass of the Operation class. It overrides the calculate method to perform subtraction between two numbers."
                    },
                    {
                        "type": "file",
                        "name": "Sum",
                        "full_path": "Arquitectura.Operations.Sum",
                        "imports": [
                            "int.Operations.Operation"
                        ],
                        "explanation": "The file contains a class called Sum that inherits from the Operation class. It has an __init__ method that takes two float parameters and a calculate method that returns the sum of the two parameters."
                    }
                ]
            },
            {
                "type": "External dependency",
                "name": "ext.numpy",
                "full_path": "Arquitectura.ext.numpy",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext.pandas",
                "full_path": "Arquitectura.ext.pandas",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext.matplotlib",
                "full_path": "Arquitectura.ext.matplotlib",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext.seaborn",
                "full_path": "Arquitectura.ext.seaborn",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.Operations.Sum",
                "full_path": "Arquitectura.int.Operations.Sum",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.Operations.Subtract",
                "full_path": "Arquitectura.int.Operations.Subtract",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.Operations.Multiply",
                "full_path": "Arquitectura.int.Operations.Multiply",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.Operations.Divide",
                "full_path": "Arquitectura.int.Operations.Divide",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.Operations.Power",
                "full_path": "Arquitectura.int.Operations.Power",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.Operations.IntDivide",
                "full_path": "Arquitectura.int.Operations.IntDivide",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.ALU.py",
                "full_path": "Arquitectura.int.ALU.py",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.Operations.Operation",
                "full_path": "Arquitectura.int.Operations.Operation",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.abc",
                "full_path": "Arquitectura.int.abc",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext.library.sublibrary",
                "full_path": "Arquitectura.ext.library.sublibrary",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.Operation",
                "full_path": "Arquitectura.int.Operation",
                "imports": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int.Power",
                "full_path": "Arquitectura.int.Power",
                "imports": [],
                "explanation": ""
            }
        ]
    },
    {
        "type": "report",
        "directories": 2,
        "files": 9,
        "coupling": "medium",
        "cohesion": "high",
        "explanation": "The project has a medium level of coupling because there are dependencies between different modules and external libraries. For example, the ALU class depends on external libraries numpy, pandas, matplotlib, and seaborn for data manipulation and visualization. It also depends on internal modules Sum, Subtract, Multiply, Divide, Power, and IntDivide for performing arithmetic operations. However, the project has a high level of cohesion because each module or class has a clear and specific responsibility. The ALU class performs arithmetic operations, the Calculator class handles user input and calls the ALU methods, and the Operations directory contains classes that perform specific mathematical operations. This high level of cohesion indicates that each module or class is focused on a single task, which can lead to easier maintenance and reusability."
    }
]
