[
    {
        "type": "directory",
        "name": "Arquitectura",
        "contents": [
            {
                "type": "file",
                "name": "ALU",
                "full_path": "Arquitectura/ALU",
                "dependencies": [
                    "ext/numpy",
                    "ext/pandas",
                    "ext/matplotlib",
                    "ext/seaborn",
                    "int/Operations/Sum",
                    "int/Operations/Subtract",
                    "int/Operations/Multiply",
                    "int/Operations/Divide",
                    "int/Operations/Power",
                    "int/Operations/IntDivide"
                ],
                "explanation": "The ALU class represents an Arithmetic Logic Unit. It performs arithmetic operations such as addition, subtraction, multiplication, division, exponentiation, and integer division. The class uses external dependencies like numpy, pandas, matplotlib, and seaborn for data manipulation and visualization. It also imports internal modules from the Operations directory to perform the calculations."
            },
            {
                "type": "file",
                "name": "Calculator",
                "full_path": "Arquitectura/Calculator",
                "dependencies": [
                    "int/ALU.py"
                ],
                "explanation": "The code imports the ALU class from the internal library 'ALU'. The Calculator class has a menu method that alternates between processing operators and operands using the ALU object. The main method initializes an instance of the Calculator class and calls the menu method."
            },
            {
                "type": "directory",
                "name": "Operations",
                "contents": [
                    {
                        "type": "file",
                        "name": "Divide",
                        "full_path": "Arquitectura/Operations/Divide",
                        "dependencies": [
                            "int/Operations/Operation"
                        ],
                        "explanation": "The file contains a class called Divide that inherits from the Operation class. It has an __init__ method to initialize the operands and a calculate method to perform the division operation. If the second operand is 0, it raises a ValueError. The file depends on the internal library 'int/Operations/Operation'."
                    },
                    {
                        "type": "file",
                        "name": "IntDivide",
                        "full_path": "Arquitectura/Operations/IntDivide",
                        "dependencies": [
                            "int/Operation",
                            "int/Divide"
                        ],
                        "explanation": "The file contains a class called IntDivide that inherits from the Operation class. It has an __init__ method to initialize the operands and a calculate method to perform integer division. If the second operand is 0, it raises a ValueError. The code depends on the internal libraries 'int/Operation' and 'int/Divide'."
                    },
                    {
                        "type": "file",
                        "name": "Multiply",
                        "full_path": "Arquitectura/Operations/Multiply",
                        "dependencies": [
                            "int/Operations/Operation"
                        ],
                        "explanation": "The Multiply class is a subclass of the Operation class. It overrides the calculate method to perform multiplication between two numbers. The dependency for this file is the internal library 'int/Operations/Operation'."
                    },
                    {
                        "type": "file",
                        "name": "Operation",
                        "full_path": "Arquitectura/Operations/Operation",
                        "dependencies": [
                            "int/abc",
                            "ext/library"
                        ],
                        "explanation": "The code imports the ABC class from the abc module, which is an internal dependency. The Operation class is defined as an abstract base class (ABC) and has an abstract method called 'calculate'. It also has an initializer that takes two float parameters. The purpose of this class is to provide a blueprint for other classes that will perform calculations."
                    },
                    {
                        "type": "file",
                        "name": "Power",
                        "full_path": "Arquitectura/Operations/Power",
                        "dependencies": [
                            "int/Operation",
                            "int/Power"
                        ],
                        "explanation": "This file contains a class called Power that inherits from the Operation class. It has an __init__ method that takes two float parameters and a calculate method that returns the result of raising the first parameter to the power of the second parameter."
                    },
                    {
                        "type": "file",
                        "name": "Subtract",
                        "full_path": "Arquitectura/Operations/Subtract",
                        "dependencies": [
                            "int/Operations/Operation"
                        ],
                        "explanation": "This file contains a class called Subtract that inherits from the Operation class. It has an __init__ method that takes two float parameters and a calculate method that subtracts the second parameter from the first one."
                    },
                    {
                        "type": "file",
                        "name": "Sum",
                        "full_path": "Arquitectura/Operations/Sum",
                        "dependencies": [
                            "int/Operations/Operation"
                        ],
                        "explanation": "The file contains a class called Sum that inherits from the Operation class. It has an __init__ method that takes two float parameters and a calculate method that returns the sum of the two parameters."
                    }
                ],
                "description": "generic description"
            },
            {
                "type": "External dependency",
                "name": "ext/numpy",
                "full_path": "Arquitectura/ext/numpy",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/pandas",
                "full_path": "Arquitectura/ext/pandas",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/matplotlib",
                "full_path": "Arquitectura/ext/matplotlib",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/seaborn",
                "full_path": "Arquitectura/ext/seaborn",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/Operations/Sum",
                "full_path": "Arquitectura/int/Operations/Sum",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/Operations/Subtract",
                "full_path": "Arquitectura/int/Operations/Subtract",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/Operations/Multiply",
                "full_path": "Arquitectura/int/Operations/Multiply",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/Operations/Divide",
                "full_path": "Arquitectura/int/Operations/Divide",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/Operations/Power",
                "full_path": "Arquitectura/int/Operations/Power",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/Operations/IntDivide",
                "full_path": "Arquitectura/int/Operations/IntDivide",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/ALU.py",
                "full_path": "Arquitectura/int/ALU.py",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/Operations/Operation",
                "full_path": "Arquitectura/int/Operations/Operation",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/Operation",
                "full_path": "Arquitectura/int/Operation",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/Divide",
                "full_path": "Arquitectura/int/Divide",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/abc",
                "full_path": "Arquitectura/int/abc",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/library",
                "full_path": "Arquitectura/ext/library",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "int/Power",
                "full_path": "Arquitectura/int/Power",
                "dependencies": [],
                "explanation": ""
            }
        ],
        "description": "generic description"
    },
    {
        "type": "report",
        "directories": 2,
        "files": 9,
        "coupling": "medium",
        "cohesion": "high",
        "explanation": "The project has a medium level of coupling because there are dependencies between different modules and external libraries. For example, the ALU class depends on external libraries like numpy, pandas, matplotlib, and seaborn for data manipulation and visualization. Additionally, internal modules in the Operations directory depend on each other to perform calculations. The project has a high level of cohesion because the files within the Operations directory have a clear and specific purpose: performing arithmetic operations. Each file represents a different operation (e.g., addition, subtraction, multiplication) and inherits from a common base class. This organization promotes code reusability and maintainability."
    }
]