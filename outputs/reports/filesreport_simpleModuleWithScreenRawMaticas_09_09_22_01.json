[
    {
        "type": "directory",
        "name": "simpleModuleWithScreenRawMaticas",
        "explanation": "\"The folder contains several files and directories. The 'boot.py' file imports modules from the internal libraries 'int' and 'utils', as well as an external library 'ext'. It uses these imported modules to perform various tasks. The 'main.py' file also imports modules from the internal libraries 'int' and 'utils', as well as an external library 'ext'. It creates an instance of a class and enters a loop. The 'scheduler.py' file imports modules from the internal libraries 'int' and 'ext', as well as external libraries. It performs various tasks using these imported modules. There are also other directories present in the folder.\"",
        "children": [
            {
                "type": "file",
                "name": "boot",
                "full_path": "simpleModuleWithScreenRawMaticas/boot",
                "id": "int/boot",
                "dependencies": [
                    "int/gc",
                    "ext/time",
                    "int/utils/internet_connection",
                    "int/utils/json_related"
                ],
                "explanation": "The code imports the 'gc' module from the internal library 'int', the 'sleep' function from the external library 'time', and the 'connect2' function from the internal library 'utils.internet_connection'. It also imports the 'update_json_field' function from the internal library 'utils.json_related'. The code then uses these imported modules and functions to perform various tasks."
            },
            {
                "type": "directory",
                "name": "dependencies",
                "explanation": "The folder contains several files, including 'font10.py', which provides functions for manipulating fonts and retrieving characters based on their ASCII value. Another file, 'ssd1306.py', imports modules and defines classes for initializing and controlling an SSD1306 OLED display. 'urequests.py' imports modules for making HTTP requests using various methods. Lastly, 'writer.py' imports modules and defines classes for managing text positions, initializing devices and fonts, printing strings, setting clip options, and managing colors.",
                "children": [
                    {
                        "type": "file",
                        "name": "font10",
                        "full_path": "simpleModuleWithScreenRawMaticas/dependencies/font10",
                        "id": "int/dependencies/font10",
                        "dependencies": [
                            "int/actuators_module",
                            "int/database",
                            "int/initialize_database",
                            "int/initialize_modules",
                            "int/screen_module",
                            "int/sensors_module",
                            "int/web_module"
                        ],
                        "explanation": "The file contains functions for height, max_width, hmap, reverse, and monospaced. It also includes a font and methods for retrieving characters from the font based on their ASCII value.",
                        "times_called": 1
                    },
                    {
                        "type": "file",
                        "name": "ssd1306",
                        "full_path": "simpleModuleWithScreenRawMaticas/dependencies/ssd1306",
                        "id": "int/dependencies/ssd1306",
                        "dependencies": [
                            "ext/micropython/const",
                            "int/framebuf"
                        ],
                        "explanation": "The code imports the 'const' module from 'micropython' and the 'FrameBuffer' class from 'framebuf'. The code also defines two classes, 'SSD1306' and its subclasses 'SSD1306_I2C' and 'SSD1306_SPI', which inherit from 'FrameBuffer'. These classes are used to initialize and control an SSD1306 OLED display. The code contains methods for initializing the display, setting parameters such as contrast and inversion, and displaying data on the screen.",
                        "times_called": 1
                    },
                    {
                        "type": "file",
                        "name": "urequests",
                        "full_path": "simpleModuleWithScreenRawMaticas/dependencies/urequests",
                        "id": "int/dependencies/urequests",
                        "dependencies": [
                            "ext/usocket",
                            "int/ubinascii",
                            "int/ujson",
                            "int/usocket",
                            "int/ussl"
                        ],
                        "explanation": "The code imports modules from the 'usocket', 'ubinascii', and 'ujson' libraries. It also imports classes and functions from the 'ussl' module in the internal library 'usocket'. The code makes HTTP requests using various methods such as GET, POST, PUT, PATCH, and DELETE."
                    },
                    {
                        "type": "file",
                        "name": "writer",
                        "full_path": "simpleModuleWithScreenRawMaticas/dependencies/writer",
                        "id": "int/dependencies/writer",
                        "dependencies": [
                            "int/utils/framebuf",
                            "int/utils/uctypes",
                            "int/utils/sys"
                        ],
                        "explanation": "The code imports the 'framebuf' module from the internal library 'utils', the 'uctypes' module from the internal library 'utils', and the 'sys' module from the internal library 'utils'. The code also defines a class called 'DisplayState' and a class called 'Writer'. The Writer class has several methods for setting text positions, initializing the device and font, printing strings, setting clip options, and managing colors.",
                        "times_called": 1
                    }
                ]
            },
            {
                "type": "directory",
                "name": "html",
                "explanation": "\"The folder contains various files, including 'a.html', 'albahaca_maticas_v3_heavy_v2_adobe_express.bin', 'b.html', 'pages.py', and 'parsers.py'. The 'pages.py' file imports modules such as 'gc' from the internal library, 'Metrics' from the external library 'utils.metrics', 'db_mod' from the internal library 'modules.initialize_database', 'ujson' from the internal library, and 'Time' from the internal library 'utils.time_management_module'. It uses these imported modules to perform operations. The 'parsers.py' file contains two functions: 'unquote_to_str' and 'parse_update_response'. The 'parse_update_response' function imports the 'Time' class from the internal dependency 'utils/time_management_module'.\"",
                "children": [
                    {
                        "type": "file",
                        "name": "a.html"
                    },
                    {
                        "type": "file",
                        "name": "albahaca_maticas_v3_heavy_v2_adobe_express.bin"
                    },
                    {
                        "type": "file",
                        "name": "b.html"
                    },
                    {
                        "type": "file",
                        "name": "pages",
                        "full_path": "simpleModuleWithScreenRawMaticas/html/pages",
                        "id": "int/html/pages",
                        "dependencies": [
                            "int/gc",
                            "ext/utils/metrics",
                            "int/modules/initialize_database",
                            "int/ujson",
                            "int/utils/time_management_module"
                        ],
                        "explanation": "The code imports the 'gc' module from the internal library, the 'Metrics' class from the external library 'utils.metrics', the 'db_mod' module from the internal library 'modules.initialize_database', the 'ujson' module from the internal library, and the 'Time' class from the internal library 'utils.time_management_module'. The code also uses the imported modules and classes to perform various operations.",
                        "times_called": 1
                    },
                    {
                        "type": "file",
                        "name": "parsers",
                        "full_path": "simpleModuleWithScreenRawMaticas/html/parsers",
                        "id": "int/html/parsers",
                        "dependencies": [
                            "int/utils/time_management_module"
                        ],
                        "explanation": "The code contains two functions: 'unquote_to_str' and 'parse_update_response'. The 'unquote_to_str' function decodes a URL-encoded string, while the 'parse_update_response' function parses a response string and returns a dictionary. The 'parse_update_response' function imports the 'Time' class from the internal dependency 'utils/time_management_module'.",
                        "times_called": 1
                    }
                ]
            },
            {
                "type": "file",
                "name": "main",
                "full_path": "simpleModuleWithScreenRawMaticas/main",
                "id": "int/main",
                "dependencies": [
                    "int/gc",
                    "ext/scheduler",
                    "int/modules/initialize_modules",
                    "int/modules/actuators_module",
                    "int/modules/sensors_module",
                    "int/modules/screen_module",
                    "int/modules/web_module"
                ],
                "explanation": "The code imports the 'gc' module internally and collects garbage. It also imports the 'scheduler' module externally. The 'initialize_modules' module is imported internally, which in turn imports the internal modules 'actuators_module', 'sensors_module', 'screen_module', and 'web_module'. The code then creates an instance of the 'Scheduler' class from the 'scheduler' module and enters a loop."
            },
            {
                "type": "directory",
                "name": "modules",
                "explanation": "\"The folder 'simpleModuleWithScreenRawMaticas/modules' contains several files that are part of a project. Each file has its own explanation, which describes the purpose and dependencies of the code inside. The explanations mention the imported modules and libraries, as well as the classes and functions defined in each file. The code in these files is responsible for controlling actuators, managing a database, initializing modules, handling screens, and serving web requests.\"",
                "children": [
                    {
                        "type": "file",
                        "name": "actuators_module",
                        "full_path": "simpleModuleWithScreenRawMaticas/modules/actuators_module",
                        "id": "int/modules/actuators_module",
                        "dependencies": [
                            "int/utils/time_management_module",
                            "ext/ujson",
                            "ext/machine"
                        ],
                        "explanation": "The code imports the 'Time' class from the internal module 'utils/time_management_module'. It also imports the 'load' function from the external library 'ujson' and the 'Pin' class from the external library 'machine'. The code defines two classes: 'ActuatorWrapper' and 'ActuatorsModule', which have various methods for controlling actuators based on time. The code initializes the actuators using a configuration file.",
                        "times_called": 3
                    },
                    {
                        "type": "file",
                        "name": "database",
                        "full_path": "simpleModuleWithScreenRawMaticas/modules/database",
                        "id": "int/modules/database",
                        "dependencies": [
                            "int/utils/time_management_module",
                            "ext/ujson"
                        ],
                        "explanation": "The code contains two classes: MeasurementList and Database. MeasurementList is used to store measurements with a specified time interval between each measurement. It depends on the internal module utils/time_management_module for time calculations. Database is used to manage registers of measurements. It depends on the external library ujson for reading the configuration file.",
                        "times_called": 1
                    },
                    {
                        "type": "file",
                        "name": "initialize_database",
                        "full_path": "simpleModuleWithScreenRawMaticas/modules/initialize_database",
                        "id": "int/modules/initialize_database",
                        "dependencies": [
                            "int/modules/database",
                            "int/utils/config",
                            "ext/json"
                        ],
                        "explanation": "The code imports the 'Database' class from the internal module 'modules.database'. It also imports the 'config_file' variable from the internal module 'utils.config'. Additionally, it uses an external library for handling JSON files.",
                        "times_called": 2
                    },
                    {
                        "type": "file",
                        "name": "initialize_modules",
                        "full_path": "simpleModuleWithScreenRawMaticas/modules/initialize_modules",
                        "id": "int/modules/initialize_modules",
                        "dependencies": [
                            "int/dht",
                            "int/time",
                            "int/machine",
                            "int/modules/actuators_module",
                            "int/modules/sensors_module",
                            "int/utils/config",
                            "ext/gc",
                            "int/modules/screen_module",
                            "int/modules/web_module"
                        ],
                        "explanation": "The code imports the DHT11 module from int/dht, sleep function from int/time, Pin and I2C classes from int/machine, ActuatorsModule and SensorsModule classes from int/modules/actuators_module and int/modules/sensors_module respectively. It also imports config.json file from int/utils, gc module from ext/gc, ScreenModule class from int/modules/screen_module, and WebModule class from int/modules/web_module.",
                        "times_called": 1
                    },
                    {
                        "type": "file",
                        "name": "screen_module",
                        "full_path": "simpleModuleWithScreenRawMaticas/modules/screen_module",
                        "id": "int/modules/screen_module",
                        "dependencies": [
                            "ext/framebuf",
                            "int/machine",
                            "int/time",
                            "int/ujson",
                            "int/dependencies/font10",
                            "int/dependencies/writer",
                            "int/dependencies/ssd1306",
                            "int/utils/internet_connection",
                            "int/utils/json_related",
                            "int/utils/time_management_module"
                        ],
                        "explanation": "The code imports various modules and scripts. It uses the framebuf module from an external library, machine and time modules from internal libraries, ujson module from an internal library, font10, writer, and ssd1306 modules from internal dependencies, and internet_connection, json_related, and time_management_module modules from internal utils.",
                        "times_called": 3
                    },
                    {
                        "type": "file",
                        "name": "sensors_module",
                        "full_path": "simpleModuleWithScreenRawMaticas/modules/sensors_module",
                        "id": "int/modules/sensors_module",
                        "dependencies": [
                            "int/utils/time_management_module",
                            "int/modules/initialize_database",
                            "ext/gc",
                            "ext/json/load"
                        ],
                        "explanation": "The code imports the 'gc' module from an external library. It also imports the 'load' function from the 'json' module in the external library. The code imports the 'Time' class from the internal module 'utils.time_management_module'. Additionally, it imports the 'initialize_database' module from the internal module 'modules'.",
                        "times_called": 3
                    },
                    {
                        "type": "file",
                        "name": "web_module",
                        "full_path": "simpleModuleWithScreenRawMaticas/modules/web_module",
                        "id": "int/modules/web_module",
                        "dependencies": [
                            "ext/usocket",
                            "int/html/parsers",
                            "int/utils/time_management_module",
                            "int/html/pages",
                            "int/utils/json_related"
                        ],
                        "explanation": "The code imports the 'usocket' module as 'socket', the 'network' module, and several modules from the 'html' and 'utils' packages. It also imports the 'Time' class from the 'time_management_module' module. The main features of the code include starting a web server, serving requests, and answering different types of requests by importing specific modules.",
                        "times_called": 3
                    }
                ]
            },
            {
                "type": "file",
                "name": "scheduler",
                "full_path": "simpleModuleWithScreenRawMaticas/scheduler",
                "id": "int/scheduler",
                "dependencies": [
                    "int/utils/json_related",
                    "int/utils/time_management_module",
                    "int/modules/actuators_module",
                    "int/modules/sensors_module",
                    "int/modules/screen_module",
                    "int/modules/web_module",
                    "ext/gc",
                    "ext/time",
                    "ext/machine"
                ],
                "explanation": "The code imports various modules and libraries such as 'json_related', 'time_management_module', 'actuators_module', 'sensors_module', 'screen_module', 'web_module' from the internal 'utils' and 'modules' directories. It also imports 'gc', 'time', and 'machine' from external libraries."
            },
            {
                "type": "file",
                "name": "upload_files"
            },
            {
                "type": "directory",
                "name": "utils",
                "explanation": "\"The folder contains several files, including 'a2.pbm', 'config.json', 'internet_connection.py', 'json_related.py', 'metrics.py', and 'time_management_module.py'. The 'internet_connection.py' file imports the 'network' and 'utime' modules from external libraries, as well as the 'load' function from the internal 'json' module. The 'json_related.py' file imports the 'ujson' module from the internal library 'int/ujson' and contains functions for updating JSON fields, settings, and error logging. The 'metrics.py' file defines a class called Metrics with a static method for calculating averages of non-negative numbers. The 'time_management_module.py' file imports the 'urequests' module from an external library and the 'sleep' function from the internal 'time' module. It also defines a class for time manipulation.\"",
                "children": [
                    {
                        "type": "file",
                        "name": "a2.pbm"
                    },
                    {
                        "type": "file",
                        "name": "config.json"
                    },
                    {
                        "type": "file",
                        "name": "internet_connection",
                        "full_path": "simpleModuleWithScreenRawMaticas/utils/internet_connection",
                        "id": "int/utils/internet_connection",
                        "dependencies": [
                            "ext/network",
                            "ext/utime",
                            "int/json/load"
                        ],
                        "explanation": "The code imports the 'network' and 'utime' modules from external libraries. It also imports the 'load' function from the internal 'json' module.",
                        "times_called": 2
                    },
                    {
                        "type": "file",
                        "name": "json_related",
                        "full_path": "simpleModuleWithScreenRawMaticas/utils/json_related",
                        "id": "int/utils/json_related",
                        "dependencies": [
                            "int/ujson"
                        ],
                        "explanation": "The code imports the 'ujson' module from the internal library 'int/ujson'. The code contains functions to update a JSON field, update JSON settings for an actuator, and log errors in a JSON file.",
                        "times_called": 4
                    },
                    {
                        "type": "file",
                        "name": "metrics",
                        "full_path": "simpleModuleWithScreenRawMaticas/utils/metrics",
                        "id": "int/utils/metrics",
                        "dependencies": [
                            "int/metrics"
                        ],
                        "explanation": "The code contains a class called Metrics with a static method get_average. This method calculates the average of non-negative numbers in an iterator. The code does not import any external dependencies."
                    },
                    {
                        "type": "file",
                        "name": "time_management_module",
                        "full_path": "simpleModuleWithScreenRawMaticas/utils/time_management_module",
                        "id": "int/utils/time_management_module",
                        "dependencies": [
                            "ext/dependencies/urequests",
                            "int/time",
                            "int/time/sleep"
                        ],
                        "explanation": "The code imports the 'urequests' module from the external library 'dependencies'. It also imports the 'sleep' function from the internal 'time' module. The code defines a class 'Time' with various methods for time manipulation.",
                        "times_called": 8
                    }
                ]
            },
            {
                "type": "External dependency",
                "name": "ext/time",
                "times_called": 2,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/time",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/micropython/const",
                "times_called": 1,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/micropython/const",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/usocket",
                "times_called": 2,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/usocket",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/utils/metrics",
                "times_called": 1,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/utils/metrics",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/scheduler",
                "times_called": 1,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/scheduler",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/ujson",
                "times_called": 2,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/ujson",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/machine",
                "times_called": 2,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/machine",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/json",
                "times_called": 1,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/json",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/gc",
                "times_called": 3,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/gc",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/framebuf",
                "times_called": 1,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/framebuf",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/json/load",
                "times_called": 1,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/json/load",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/network",
                "times_called": 1,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/network",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/utime",
                "times_called": 1,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/utime",
                "dependencies": [],
                "explanation": ""
            },
            {
                "type": "External dependency",
                "name": "ext/dependencies/urequests",
                "times_called": 1,
                "full_path": "simpleModuleWithScreenRawMaticas/ext/dependencies/urequests",
                "dependencies": [],
                "explanation": ""
            }
        ]
    },
    {
        "type": "report",
        "directories": 5,
        "files": 26,
        "coupling": "medium",
        "cohesion": "high",
        "explanation": "The project has a medium level of coupling because there are multiple dependencies between different modules and libraries. For example, the 'boot.py' file imports modules from both internal and external libraries, and the 'scheduler.py' file imports modules from internal libraries as well as external libraries. This indicates that there is some interdependence between different parts of the project. However, the project also exhibits a high level of cohesion because each module and directory has a clear purpose and focuses on specific tasks. The files within each directory are related to each other and work together to achieve a common goal. This high level of cohesion is beneficial as it promotes modularity, maintainability, and reusability of code."
    }
]